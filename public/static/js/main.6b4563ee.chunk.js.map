{"version":3,"sources":["firebase/config.js","firebase/services.js","components/Login/index.js","Context/AuthProvider.js","hooks/useFirestore.js","Context/AppProvider.js","components/ChatRoom/UserInfo.js","components/ChatRoom/RoomList.js","components/ChatRoom/Sidebar.js","components/ChatRoom/Message.js","components/ChatRoom/ChatWindow.js","components/ChatRoom/index.js","components/Modals/AddRoomModal.js","components/Modals/InviteMemberModal.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","window","location","hostname","addDocument","collection","data","add","createdAt","FieldValue","serverTimestamp","generateKeywords","displayName","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","push","join","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","Title","Typography","fbProvider","FacebookAuthProvider","googleProvider","GoogleAuthProvider","Login","handleLogin","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","email","photoURL","uid","providerId","keywords","toLowerCase","justify","style","height","span","textAlign","level","width","marginBottom","onClick","AuthContext","React","createContext","AuthProvider","children","useState","setUser","history","useHistory","isLoading","setIsLoading","useEffect","unsubscibed","onAuthStateChanged","Provider","value","position","inset","useFirestore","condition","documents","setDocuments","collectionRef","orderBy","compareValue","where","fieldName","operator","onSnapshot","snapshot","docs","map","doc","id","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isInviteMemberVisible","setIsInviteMemberVisible","selectedRoomId","setSelectedRoomId","useContext","roomsCondition","useMemo","rooms","selectedRoom","find","room","usersCondition","members","clearState","WrapperStyled","styled","div","UserInfo","src","charAt","toUpperCase","Text","className","ghost","signOut","Panel","Collapse","PanelStyled","LinkStyled","Link","RoomList","defaultActiveKey","header","type","icon","PlusSquareOutlined","SidebarStyled","Sidebar","formatDate","seconds","formattedDate","formatRelative","Date","slice","Message","text","size","HeaderStyled","ButtonGroupStyled","ContentStyled","FormStyled","Form","MessageListStyled","ChatWindow","inputValue","setInputValue","useForm","form","inputRef","useRef","messageListRef","handleOnSubmit","roomId","resetFields","current","setTimeout","focus","messages","scrollTop","scrollHeight","description","UserAddOutlined","Group","maxCount","member","title","ref","mes","Item","onChange","e","target","onPressEnter","placeholder","bordered","autoComplete","message","showIcon","margin","closable","ChatRoom","AddRoomModal","visible","onOk","getFieldsValue","onCancel","layout","label","TextArea","DebounceSelect","fetchOptions","debounceTimeout","curMembers","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","then","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","limit","get","includes","InviteMemberModal","setValue","update","val","destroyOnClose","mode","newValue","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+RAmBYA,IAASC,cAZE,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CAGPC,cAAe,iBAIjBR,IAASS,YACT,IAAMC,EAAOV,IAASU,OAEhBC,EAAKX,IAASY,YAEhBC,OAAOC,SAASC,SAULf,QAAf,E,iBCjCagB,EAAc,SAACC,EAAYC,GACxBP,EAAGM,WAAWA,GAEtBE,IAAN,2BACKD,GADL,IAEEE,UAAWpB,EAASY,UAAUS,WAAWC,sBAKhCC,EAAmB,SAACC,GAgB/B,IAbA,IAAMC,EAAOD,EAAYE,MAAM,KAAKC,QAAO,SAACC,GAAD,OAAUA,KAE/CC,EAASJ,EAAKI,OAChBC,EAAY,GACZC,EAAS,GACTC,EAAc,GAQTC,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BH,EAAUG,IAAK,EAoCjB,OAvBA,SAASC,EAAgBC,GACvB,IAAK,IAAIF,EAAI,EAAGA,EAAIJ,EAAQI,IACrBH,EAAUG,KACbH,EAAUG,IAAK,EACfF,EAAOI,GAAKV,EAAKQ,GAEbE,IAAMN,EAAS,GACjBG,EAAYI,KAAKL,EAAOM,KAAK,MAG/BH,EAAgBC,EAAI,GACpBL,EAAUG,IAAK,GAKrBC,CAAgB,GAECF,EAAYM,QAAO,SAACC,EAAKC,GACxC,IAAMC,EA7Be,SAAChB,GACtB,IAAMiB,EAAU,GACZC,EAAU,GAKd,OAJAlB,EAAKC,MAAM,IAAIkB,SAAQ,SAACC,GACtBF,GAAWE,EACXH,EAAQN,KAAKO,MAERD,EAsBOI,CAAeN,GAC7B,MAAM,GAAN,mBAAWD,GAAX,YAAmBE,MAClB,K,OC1DGM,EAAUC,IAAVD,MAEFE,EAAa,IAAIjD,EAASU,KAAKwC,qBAC/BC,EAAiB,IAAInD,EAASU,KAAK0C,mBAE1B,SAASC,IACtB,IAAMC,EAAW,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACyB9C,EAAK+C,gBAAgBF,GAD9C,gBACVG,EADU,EACVA,mBAAoBC,EADV,EACUA,MAE5B,OAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAoBE,YACtB5C,EAAY,QAAS,CACnBQ,YAAamC,EAAKnC,YAClBqC,MAAOF,EAAKE,MACZC,SAAUH,EAAKG,SACfC,IAAKJ,EAAKI,IACVC,WAAYN,EAAmBM,WAC/BC,SAAU1C,EAAgB,UAACoC,EAAKnC,mBAAN,aAAC,EAAkB0C,iBAV/B,2CAAH,sDAejB,OACE,8BACE,cAAC,IAAD,CAAKC,QAAQ,SAASC,MAAO,CAAEC,OAAQ,KAAvC,SACE,eAAC,IAAD,CAAKC,KAAM,EAAX,UACE,cAACvB,EAAD,CAAOqB,MAAO,CAAEG,UAAW,UAAYC,MAAO,EAA9C,qBAGA,cAAC,IAAD,CACEJ,MAAO,CAAEK,MAAO,OAAQC,aAAc,GACtCC,QAAS,kBAAMrB,EAAYH,IAF7B,uDAMA,cAAC,IAAD,CACEiB,MAAO,CAAEK,MAAO,QAChBE,QAAS,kBAAMrB,EAAYL,IAF7B,gE,+DClCG2B,EAAcC,IAAMC,gBAElB,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACzBC,mBAAS,IADgB,mBAC1CtB,EAD0C,KACpCuB,EADoC,KAE3CC,EAAUC,cAFiC,EAGfH,oBAAS,GAHM,mBAG1CI,EAH0C,KAG/BC,EAH+B,KAgCjD,OA3BAT,IAAMU,WAAU,WACd,IAAMC,EAAc9E,EAAK+E,oBAAmB,SAAC9B,GAC3C,GAAIA,EAAM,CAAC,IACDnC,EAAsCmC,EAAtCnC,YAAaqC,EAAyBF,EAAzBE,MAAOE,EAAkBJ,EAAlBI,IAAKD,EAAaH,EAAbG,SASjC,OARAoB,EAAQ,CACN1D,cACAqC,QACAE,MACAD,aAEFwB,GAAa,QACbH,EAAQ/C,KAAK,KAKf8C,EAAQ,IACRI,GAAa,GACbH,EAAQ/C,KAAK,aAIf,OAAO,WACLoD,OAED,CAACL,IAGF,cAACP,EAAYc,SAAb,CAAsBC,MAAO,CAAEhC,QAA/B,SACG0B,EAAY,cAAC,IAAD,CAAMjB,MAAO,CAAEwB,SAAU,QAASC,MAAO,KAAUb,ICtCtE,I,EAkCec,EAlCM,SAAC7E,EAAY8E,GAAe,IAAD,EACZd,mBAAS,IADG,mBACvCe,EADuC,KAC5BC,EAD4B,KA+B9C,OA5BApB,IAAMU,WAAU,WACd,IAAIW,EAAgBvF,EAAGM,WAAWA,GAAYkF,QAAQ,aACtD,GAAIJ,EAAW,CACb,IAAKA,EAAUK,eAAiBL,EAAUK,aAAavE,OAGrD,YADAoE,EAAa,IAIfC,EAAgBA,EAAcG,MAC5BN,EAAUO,UACVP,EAAUQ,SACVR,EAAUK,cAad,OAToBF,EAAcM,YAAW,SAACC,GAC5C,IAAMT,EAAYS,EAASC,KAAKC,KAAI,SAACC,GAAD,mBAAC,eAChCA,EAAI1F,QAD2B,IAElC2F,GAAID,EAAIC,QAGVZ,EAAaD,QAId,CAAC/E,EAAY8E,IAETC,GC9BIc,EAAajC,IAAMC,gBAEjB,SAASiC,EAAT,GAAoC,IAAb/B,EAAY,EAAZA,SAAY,EACAC,oBAAS,GADT,mBACzC+B,EADyC,KACvBC,EADuB,OAEUhC,oBAAS,GAFnB,mBAEzCiC,EAFyC,KAElBC,EAFkB,OAGJlC,mBAAS,IAHL,mBAGzCmC,EAHyC,KAGzBC,EAHyB,KAMtCtD,EACNc,IAAMyC,WAAW1C,GADnBjB,KAAQI,IAGJwD,EAAiB1C,IAAM2C,SAAQ,WACnC,MAAO,CACLlB,UAAW,UACXC,SAAU,iBACVH,aAAcrC,KAEf,CAACA,IAEE0D,EAAQ3B,EAAa,QAASyB,GAE9BG,EAAe7C,IAAM2C,SACzB,kBAAMC,EAAME,MAAK,SAACC,GAAD,OAAUA,EAAKf,KAAOO,MAAmB,KAC1D,CAACK,EAAOL,IAGJS,EAAiBhD,IAAM2C,SAAQ,WACnC,MAAO,CACLlB,UAAW,MACXC,SAAU,KACVH,aAAcsB,EAAaI,WAE5B,CAACJ,EAAaI,UAEXA,EAAUhC,EAAa,QAAS+B,GAQtC,OACE,cAACf,EAAWpB,SAAZ,CACEC,MAAO,CACL8B,QACAK,UACAJ,eACAV,mBACAC,sBACAG,iBACAC,oBACAH,wBACAC,2BACAY,WAlBa,WACjBV,EAAkB,IAClBJ,GAAoB,GACpBE,GAAyB,KAIzB,SAcGnC,ICrDP,IAAMgD,EAAgBC,IAAOC,IAAV,sNAYJ,SAASC,IAAY,IAAD,IAG7BtD,IAAMyC,WAAW1C,GADnBjB,KAAQnC,EAFuB,EAEvBA,YAAasC,EAFU,EAEVA,SAEfiE,EAAelD,IAAMyC,WAAWR,GAAhCiB,WAER,OACE,eAACC,EAAD,WACE,gCACE,cAAC,IAAD,CAAQI,IAAKtE,EAAb,SACGA,EAAW,GAAH,OAAQtC,QAAR,IAAQA,GAAR,UAAQA,EAAa6G,OAAO,UAA5B,aAAQ,EAAwBC,gBAE3C,cAAC,IAAWC,KAAZ,CAAiBC,UAAU,WAA3B,SAAuChH,OAEzC,cAAC,IAAD,CACEiH,OAAK,EACL9D,QAAS,WAEPoD,IACArH,EAAKgI,WALT,yC,4BC5BEC,EAAUC,IAAVD,MAEFE,EAAcZ,YAAOU,EAAPV,CAAH,8OAkBXa,EAAab,YAAOjF,IAAW+F,KAAlBd,CAAH,uFAMD,SAASe,IAAY,IAAD,EAE/BnE,IAAMyC,WAAWR,GADXW,EADyB,EACzBA,MAAOR,EADkB,EAClBA,oBAAqBI,EADH,EACGA,kBAOpC,OACE,cAAC,IAAD,CAAUoB,OAAK,EAACQ,iBAAkB,CAAC,KAAnC,SACE,eAACJ,EAAD,CAAaK,OAAO,+BAApB,UACGzB,EAAMd,KAAI,SAACiB,GAAD,OACT,cAACkB,EAAD,CAA0BnE,QAAS,kBAAM0C,EAAkBO,EAAKf,KAAhE,SACGe,EAAKnG,MADSmG,EAAKf,OAIxB,cAAC,IAAD,CACEsC,KAAK,OACLC,KAAM,cAACC,EAAA,EAAD,IACNb,UAAU,WACV7D,QAhBc,WACpBsC,GAAoB,IAWhB,gCAN4C,OCpCpD,IAAMqC,EAAgBrB,IAAOC,IAAV,uFAMJ,SAASqB,IACtB,OACE,cAACD,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKhF,KAAM,GAAX,SACE,cAAC6D,EAAD,MAEF,cAAC,IAAD,CAAK7D,KAAM,GAAX,SACE,cAAC0E,EAAD,W,mFCfJhB,GAAgBC,IAAOC,IAAV,yPAmBnB,SAASsB,GAAWC,GAClB,IAAIC,EAAgB,GASpB,OAPID,IAGFC,GAFAA,EAAgBC,aAAe,IAAIC,KAAe,IAAVH,GAAiB,IAAIG,OAG7CvB,OAAO,GAAGC,cAAgBoB,EAAcG,MAAM,IAGzDH,EAGM,SAASI,GAAT,GAA8D,IAAD,EAA1CC,EAA0C,EAA1CA,KAAMvI,EAAoC,EAApCA,YAAaJ,EAAuB,EAAvBA,UAAW0C,EAAY,EAAZA,SAC9D,OACE,eAAC,GAAD,WACE,gCACE,cAAC,IAAD,CAAQkG,KAAK,QAAQ5B,IAAKtE,EAA1B,SACGA,EAAW,GAAH,OAAQtC,QAAR,IAAQA,GAAR,UAAQA,EAAa6G,OAAO,UAA5B,aAAQ,EAAwBC,gBAE3C,cAAC,IAAWC,KAAZ,CAAiBC,UAAU,SAA3B,SAAqChH,IACrC,cAAC,IAAW+G,KAAZ,CAAiBC,UAAU,OAA3B,SACGgB,GAAU,OAACpI,QAAD,IAACA,OAAD,EAACA,EAAWqI,cAG3B,8BACE,cAAC,IAAWlB,KAAZ,CAAiBC,UAAU,UAA3B,SAAsCuB,SCxC9C,IAAME,GAAehC,IAAOC,IAAV,2bA0BZgC,GAAoBjC,IAAOC,IAAV,wEAKjBF,GAAgBC,IAAOC,IAAV,gDAIbiC,GAAgBlC,IAAOC,IAAV,yJAQbkC,GAAanC,YAAOoC,KAAPpC,CAAH,sQAcVqC,GAAoBrC,IAAOC,IAAV,wEAKR,SAASqC,KAAc,IAAD,EAEjCjD,qBAAWR,GADLY,EAD2B,EAC3BA,aAAcI,EADa,EACbA,QAASX,EADI,EACJA,yBADI,EAK/BG,qBAAW1C,GADbjB,KAAQI,EAJyB,EAIzBA,IAAKD,EAJoB,EAIpBA,SAAUtC,EAJU,EAIVA,YAJU,EAMCyD,mBAAS,IANV,mBAM5BuF,EAN4B,KAMhBC,EANgB,OAOpBJ,KAAKK,UAAbC,EAP4B,oBAQ7BC,EAAWC,iBAAO,MAClBC,EAAiBD,iBAAO,MAMxBE,EAAiB,WACrB/J,EAAY,WAAY,CACtB+I,KAAMS,EACNzG,MACAD,WACAkH,OAAQtD,EAAab,GACrBrF,gBAGFmJ,EAAKM,YAAY,CAAC,aAGlB,OAAIL,QAAJ,IAAIA,OAAJ,EAAIA,EAAUM,UACZC,YAAW,WACTP,EAASM,QAAQE,YAKjBrF,EAAYlB,IAAM2C,SACtB,iBAAO,CACLlB,UAAW,SACXC,SAAU,KACVH,aAAcsB,EAAab,MAE7B,CAACa,EAAab,KAGVwE,EAAWvF,EAAa,WAAYC,GAU1C,OARAR,qBAAU,YAER,OAAIuF,QAAJ,IAAIA,OAAJ,EAAIA,EAAgBI,WAClBJ,EAAeI,QAAQI,UACrBR,EAAeI,QAAQK,aAAe,MAEzC,CAACF,IAGF,cAAC,GAAD,UACG3D,EAAab,GACZ,qCACE,eAACoD,GAAD,WACE,sBAAKzB,UAAU,eAAf,UACE,mBAAGA,UAAU,gBAAb,SAA8Bd,EAAajG,OAC3C,sBAAM+G,UAAU,sBAAhB,SACGd,EAAa8D,iBAGlB,eAACtB,GAAD,WACE,cAAC,IAAD,CACEd,KAAM,cAACqC,GAAA,EAAD,IACNtC,KAAK,OACLxE,QAAS,kBAAMwC,GAAyB,IAH1C,sBAOA,cAAC,IAAOuE,MAAR,CAAc1B,KAAK,QAAQ2B,SAAU,EAArC,SACG7D,EAAQnB,KAAI,SAACiF,GAAD,eACX,cAAC,KAAD,CAASC,MAAOD,EAAOpK,YAAvB,SACE,cAAC,IAAD,CAAQ4G,IAAKwD,EAAO9H,SAApB,SACG8H,EAAO9H,SACJ,GADH,UAEG8H,EAAOpK,mBAFV,iBAEG,EAAoB6G,OAAO,UAF9B,aAEG,EAA+BC,iBAJEsD,EAAO/E,eAWxD,eAACsD,GAAD,WACE,cAACG,GAAD,CAAmBwB,IAAKhB,EAAxB,SACGO,EAAS1E,KAAI,SAACoF,GAAD,OACZ,cAACjC,GAAD,CAEEC,KAAMgC,EAAIhC,KACVjG,SAAUiI,EAAIjI,SACdtC,YAAauK,EAAIvK,YACjBJ,UAAW2K,EAAI3K,WAJV2K,EAAIlF,SAQf,eAACuD,GAAD,CAAYO,KAAMA,EAAlB,UACE,cAAC,KAAKqB,KAAN,CAAWvK,KAAK,UAAhB,SACE,cAAC,KAAD,CACEqK,IAAKlB,EACLqB,SA1FU,SAACC,GACzBzB,EAAcyB,EAAEC,OAAOxG,QA0FTyG,aAAcrB,EACdsB,YAAY,6BACZC,UAAU,EACVC,aAAa,UAGjB,cAAC,IAAD,CAAQpD,KAAK,UAAUxE,QAASoG,EAAhC,+BAON,cAAC,KAAD,CACEyB,QAAQ,4BACRrD,KAAK,OACLsD,UAAQ,EACRrI,MAAO,CAAEsI,OAAQ,GACjBC,UAAQ,MC3LH,SAASC,KACtB,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKtI,KAAM,EAAX,SACE,cAACiF,EAAD,MAEF,cAAC,IAAD,CAAKjF,KAAM,GAAX,SACE,cAACiG,GAAD,W,cCPK,SAASsC,KAAgB,IAAD,EACavF,qBAAWR,GAArDE,EAD6B,EAC7BA,iBAAkBC,EADW,EACXA,oBAEhBlD,EACNuD,qBAAW1C,GADbjB,KAAQI,IAH2B,EAKtBsG,KAAKK,UAAbC,EAL8B,oBAyBrC,OACE,8BACE,cAAC,KAAD,CACEkB,MAAM,oBACNiB,QAAS9F,EACT+F,KAvBW,WAGf/L,EAAY,QAAD,YAAC,eAAc2J,EAAKqC,kBAApB,IAAsClF,QAAS,CAAC/D,MAG3D4G,EAAKM,cAELhE,GAAoB,IAgBhBgG,SAbe,WAEnBtC,EAAKM,cAELhE,GAAoB,IAKlB,SAME,eAAC,KAAD,CAAM0D,KAAMA,EAAMuC,OAAO,WAAzB,UACE,cAAC,KAAKlB,KAAN,CAAWmB,MAAM,kBAAY1L,KAAK,OAAlC,SACE,cAAC,KAAD,CAAO4K,YAAY,gCAErB,cAAC,KAAKL,KAAN,CAAWmB,MAAM,gBAAQ1L,KAAK,cAA9B,SACE,cAAC,KAAM2L,SAAP,CAAgBf,YAAY,qC,kCCtCxC,SAASgB,GAAT,GAKI,IAJFC,EAIC,EAJDA,aAIC,IAHDC,uBAGC,MAHiB,IAGjB,EAFDC,EAEC,EAFDA,WACGC,EACF,kEAG+BxI,oBAAS,GAHxC,mBAGMyI,EAHN,KAGgBC,EAHhB,OAI6B1I,mBAAS,IAJtC,mBAIM2I,EAJN,KAIeC,EAJf,KAMKC,EAAkBjJ,IAAM2C,SAAQ,WAWpC,OAAOuG,qBAVa,SAACpI,GACnBkI,EAAW,IACXF,GAAY,GAEZL,EAAa3H,EAAO6H,GAAYQ,MAAK,SAACC,GACpCJ,EAAWI,GACXN,GAAY,QAIaJ,KAC5B,CAACA,EAAiBD,EAAcE,IASnC,OAPA3I,IAAMU,WAAU,WACd,OAAO,WAELsI,EAAW,OAEZ,IAGD,cAAC,KAAD,yBACEK,cAAY,EACZC,cAAc,EACdC,SAAUN,EACVO,gBAAiBX,EAAW,cAAC,IAAD,CAAM1D,KAAK,UAAa,MAChDyD,GALN,aAOGG,EAAQjH,KAAI,SAAC2H,GAAD,eACX,eAAC,KAAOC,OAAR,CAA+B5I,MAAO2I,EAAI3I,MAAOkG,MAAOyC,EAAInB,MAA5D,UACE,cAAC,IAAD,CAAQnD,KAAK,QAAQ5B,IAAKkG,EAAIxK,SAA9B,SACGwK,EAAIxK,SAAW,GAAf,UAAoBwK,EAAInB,aAAxB,iBAAoB,EAAW9E,OAAO,UAAtC,aAAoB,EAAsBC,gBAF/C,WAIOgG,EAAInB,SAJSmB,EAAI3I,a,SAWjB6I,G,mFAAf,WAA6BC,EAAQjB,GAArC,SAAAhK,EAAA,+EACS7C,EACJM,WAAW,SACXoF,MAAM,WAAY,iBAFd,OAEgCoI,QAFhC,IAEgCA,OAFhC,EAEgCA,EAAQvK,eAC5CiC,QAAQ,eACRuI,MAAM,IACNC,MACAX,MAAK,SAACvH,GACL,OAAOA,EAASC,KACbC,KAAI,SAACC,GAAD,MAAU,CACbuG,MAAOvG,EAAI1F,OAAOM,YAClBmE,MAAOiB,EAAI1F,OAAO6C,IAClBD,SAAU8C,EAAI1F,OAAO4C,aAEtBnC,QAAO,SAAC2M,GAAD,OAAUd,EAAWoB,SAASN,EAAI3I,cAdlD,4C,sBAkBe,SAASkJ,KAAqB,IAAD,EAMtCvH,qBAAWR,GAJbI,EAFwC,EAExCA,sBACAC,EAHwC,EAGxCA,yBACAC,EAJwC,EAIxCA,eACAM,EALwC,EAKxCA,aALwC,EAOhBzC,mBAAS,IAPO,mBAOnCU,EAPmC,KAO5BmJ,EAP4B,OAQ3BzE,KAAKK,UAAbC,EARmC,oBAiC1C,OACE,8BACE,cAAC,KAAD,CACEkB,MAAM,oCACNiB,QAAS5F,EACT6F,KA5BW,WAEfpC,EAAKM,cACL6D,EAAS,IAGOnO,EAAGM,WAAW,SAAS2F,IAAIQ,GAEnC2H,OAAO,CACbjH,QAAQ,GAAD,mBAAMJ,EAAaI,SAAnB,YAA+BnC,EAAMgB,KAAI,SAACqI,GAAD,OAASA,EAAIrJ,aAG/DwB,GAAyB,IAiBrB8F,SAde,WAEnBtC,EAAKM,cACL6D,EAAS,IAET3H,GAAyB,IAUrB8H,gBAAgB,EALlB,SAOE,cAAC,KAAD,CAAMtE,KAAMA,EAAMuC,OAAO,WAAzB,SACE,cAACG,GAAD,CACE6B,KAAK,WACLzN,KAAK,cACL0L,MAAM,iCACNxH,MAAOA,EACP0G,YAAY,oCACZiB,aAAckB,GACdvC,SAAU,SAACkD,GAAD,OAAcL,EAASK,IACjC/K,MAAO,CAAEK,MAAO,QAChB+I,WAAY9F,EAAaI,gBCrGtBsH,OAjBf,WACE,OACE,cAAC,IAAD,UACE,cAACrK,EAAD,UACE,eAACgC,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsI,UAAWhM,EAAOiM,KAAK,WAC9B,cAAC,IAAD,CAAOD,UAAWzC,GAAU0C,KAAK,SAEnC,cAACzC,GAAD,IACA,cAACgC,GAAD,YCRKU,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SAKjDX,O","file":"static/js/main.6b4563ee.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\n\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\n// import \"firebase/firestore\";\r\nimport \"firebase/firebase-firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBHwztGzl76uIUJ1m6dFReEbYhie7wY-2I\",\r\n  authDomain: \"chat-app-571c8.firebaseapp.com\",\r\n  projectId: \"chat-app-571c8\",\r\n  storageBucket: \"chat-app-571c8.appspot.com\",\r\n  messagingSenderId: \"425393038023\",\r\n  appId: \"1:425393038023:web:3ab1337a9bf5a2982a54e2\",\r\n  // databaseURL:\r\n  //   \"https://chat-app-571c8-default-rtdb.asia-southeast1.firebasedatabase.app/\",\r\n  measurementId: \"G-TKGYQS2JMF\",\r\n};\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\nconst auth = firebase.auth();\r\n// const db = firebase.database;\r\nconst db = firebase.firestore();\r\n\r\nif (window.location.hostname === \"localhost\") {\r\n  //   auth.useEmulator(\"http://localhost:3000\");\r\n  //   db.useEmulator(\"localhost\", \"8080\");\r\n  // }\r\n  // if (window.location.hostname === \"10.56.66.48\") {\r\n  //   auth.useEmulator(\"http://localhost:3000\");\r\n  //   // db.useEmulator('localhost', '8080');\r\n}\r\n\r\nexport { db, auth };\r\nexport default firebase;\r\n","import firebase, { db } from \"./config\";\r\n\r\nexport const addDocument = (collection, data) => {\r\n  const query = db.collection(collection);\r\n\r\n  query.add({\r\n    ...data,\r\n    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n  });\r\n};\r\n\r\n// tao keywords cho displayName, su dung cho search\r\nexport const generateKeywords = (displayName) => {\r\n  // liet ke tat cac hoan vi. vd: name = [\"David\", \"Van\", \"Teo\"]\r\n  // => [\"David\", \"Van\", \"Teo\"], [\"David\", \"Teo\", \"Van\"], [\"Teo\", \"David\", \"Van\"],...\r\n  const name = displayName.split(\" \").filter((word) => word);\r\n\r\n  const length = name.length;\r\n  let flagArray = [];\r\n  let result = [];\r\n  let stringArray = [];\r\n\r\n  /**\r\n   * khoi tao mang flag false\r\n   * dung de danh dau xem gia tri\r\n   * tai vi tri nay da duoc su dung\r\n   * hay chua\r\n   **/\r\n  for (let i = 0; i < length; i++) {\r\n    flagArray[i] = false;\r\n  }\r\n\r\n  const createKeywords = (name) => {\r\n    const arrName = [];\r\n    let curName = \"\";\r\n    name.split(\"\").forEach((letter) => {\r\n      curName += letter;\r\n      arrName.push(curName);\r\n    });\r\n    return arrName;\r\n  };\r\n\r\n  function findPermutation(k) {\r\n    for (let i = 0; i < length; i++) {\r\n      if (!flagArray[i]) {\r\n        flagArray[i] = true;\r\n        result[k] = name[i];\r\n\r\n        if (k === length - 1) {\r\n          stringArray.push(result.join(\" \"));\r\n        }\r\n\r\n        findPermutation(k + 1);\r\n        flagArray[i] = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  findPermutation(0);\r\n\r\n  const keywords = stringArray.reduce((acc, cur) => {\r\n    const words = createKeywords(cur);\r\n    return [...acc, ...words];\r\n  }, []);\r\n\r\n  return keywords;\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col, Button, Typography } from \"antd\";\r\nimport firebase, { auth } from \"../../firebase/config\";\r\nimport { addDocument, generateKeywords } from \"../../firebase/services\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport default function Login() {\r\n  const handleLogin = async (provider) => {\r\n    const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n    if (additionalUserInfo?.isNewUser) {\r\n      addDocument(\"users\", {\r\n        displayName: user.displayName,\r\n        email: user.email,\r\n        photoURL: user.photoURL,\r\n        uid: user.uid,\r\n        providerId: additionalUserInfo.providerId,\r\n        keywords: generateKeywords(user.displayName?.toLowerCase()),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"center\" style={{ height: 800 }}>\r\n        <Col span={8}>\r\n          <Title style={{ textAlign: \"center\" }} level={3}>\r\n            HB Chat\r\n          </Title>\r\n          <Button\r\n            style={{ width: \"100%\", marginBottom: 5 }}\r\n            onClick={() => handleLogin(googleProvider)}\r\n          >\r\n            Đăng nhập bằng Google\r\n          </Button>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => handleLogin(fbProvider)}\r\n          >\r\n            Đăng nhập bằng Facebook\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase/config';\r\nimport { Spin } from 'antd';\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport default function AuthProvider({ children }) {\r\n  const [user, setUser] = useState({});\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscibed = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const { displayName, email, uid, photoURL } = user;\r\n        setUser({\r\n          displayName,\r\n          email,\r\n          uid,\r\n          photoURL,\r\n        });\r\n        setIsLoading(false);\r\n        history.push('/');\r\n        return;\r\n      }\r\n\r\n      // reset user info\r\n      setUser({});\r\n      setIsLoading(false);\r\n      history.push('/login');\r\n    });\r\n\r\n    // clean function\r\n    return () => {\r\n      unsubscibed();\r\n    };\r\n  }, [history]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user }}>\r\n      {isLoading ? <Spin style={{ position: 'fixed', inset: 0 }} /> : children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { db } from '../firebase/config';\r\n\r\nconst useFirestore = (collection, condition) => {\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    let collectionRef = db.collection(collection).orderBy('createdAt');\r\n    if (condition) {\r\n      if (!condition.compareValue || !condition.compareValue.length) {\r\n        // reset documents data\r\n        setDocuments([]);\r\n        return;\r\n      }\r\n\r\n      collectionRef = collectionRef.where(\r\n        condition.fieldName,\r\n        condition.operator,\r\n        condition.compareValue\r\n      );\r\n    }\r\n\r\n    const unsubscribe = collectionRef.onSnapshot((snapshot) => {\r\n      const documents = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n\r\n      setDocuments(documents);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [collection, condition]);\r\n\r\n  return documents;\r\n};\r\n\r\nexport default useFirestore;\r\n","import React, { useState } from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { AuthContext } from './AuthProvider';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport default function AppProvider({ children }) {\r\n  const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\r\n  const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\r\n  const [selectedRoomId, setSelectedRoomId] = useState('');\r\n\r\n  const {\r\n    user: { uid },\r\n  } = React.useContext(AuthContext);\r\n\r\n  const roomsCondition = React.useMemo(() => {\r\n    return {\r\n      fieldName: 'members',\r\n      operator: 'array-contains',\r\n      compareValue: uid,\r\n    };\r\n  }, [uid]);\r\n\r\n  const rooms = useFirestore('rooms', roomsCondition);\r\n\r\n  const selectedRoom = React.useMemo(\r\n    () => rooms.find((room) => room.id === selectedRoomId) || {},\r\n    [rooms, selectedRoomId]\r\n  );\r\n\r\n  const usersCondition = React.useMemo(() => {\r\n    return {\r\n      fieldName: 'uid',\r\n      operator: 'in',\r\n      compareValue: selectedRoom.members,\r\n    };\r\n  }, [selectedRoom.members]);\r\n\r\n  const members = useFirestore('users', usersCondition);\r\n\r\n  const clearState = () => {\r\n    setSelectedRoomId('');\r\n    setIsAddRoomVisible(false);\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        rooms,\r\n        members,\r\n        selectedRoom,\r\n        isAddRoomVisible,\r\n        setIsAddRoomVisible,\r\n        selectedRoomId,\r\n        setSelectedRoomId,\r\n        isInviteMemberVisible,\r\n        setIsInviteMemberVisible,\r\n        clearState,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Avatar, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nimport { auth } from '../../firebase/config';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { AppContext } from '../../Context/AppProvider';\r\n\r\nconst WrapperStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 12px 16px;\r\n  border-bottom: 1px solid rgba(82, 38, 83);\r\n\r\n  .username {\r\n    color: white;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport default function UserInfo() {\r\n  const {\r\n    user: { displayName, photoURL },\r\n  } = React.useContext(AuthContext);\r\n  const { clearState } = React.useContext(AppContext);\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      <div>\r\n        <Avatar src={photoURL}>\r\n          {photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}\r\n        </Avatar>\r\n        <Typography.Text className='username'>{displayName}</Typography.Text>\r\n      </div>\r\n      <Button\r\n        ghost\r\n        onClick={() => {\r\n          // clear state in App Provider when logout\r\n          clearState();\r\n          auth.signOut();\r\n        }}\r\n      >\r\n        Đăng xuất\r\n      </Button>\r\n    </WrapperStyled>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Collapse, Typography, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { PlusSquareOutlined } from '@ant-design/icons';\r\nimport { AppContext } from '../../Context/AppProvider';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst PanelStyled = styled(Panel)`\r\n  &&& {\r\n    .ant-collapse-header,\r\n    p {\r\n      color: white;\r\n    }\r\n\r\n    .ant-collapse-content-box {\r\n      padding: 0 40px;\r\n    }\r\n\r\n    .add-room {\r\n      color: white;\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkStyled = styled(Typography.Link)`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: white;\r\n`;\r\n\r\nexport default function RoomList() {\r\n  const { rooms, setIsAddRoomVisible, setSelectedRoomId } =\r\n    React.useContext(AppContext);\r\n\r\n  const handleAddRoom = () => {\r\n    setIsAddRoomVisible(true);\r\n  };\r\n\r\n  return (\r\n    <Collapse ghost defaultActiveKey={['1']}>\r\n      <PanelStyled header='Danh sách các phòng' key='1'>\r\n        {rooms.map((room) => (\r\n          <LinkStyled key={room.id} onClick={() => setSelectedRoomId(room.id)}>\r\n            {room.name}\r\n          </LinkStyled>\r\n        ))}\r\n        <Button\r\n          type='text'\r\n          icon={<PlusSquareOutlined />}\r\n          className='add-room'\r\n          onClick={handleAddRoom}\r\n        >\r\n          Thêm phòng\r\n        </Button>\r\n      </PanelStyled>\r\n    </Collapse>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport UserInfo from './UserInfo';\r\nimport RoomList from './RoomList';\r\nimport styled from 'styled-components';\r\n\r\nconst SidebarStyled = styled.div`\r\n  background: #3f0e40;\r\n  color: white;\r\n  height: 100vh;\r\n`;\r\n\r\nexport default function Sidebar() {\r\n  return (\r\n    <SidebarStyled>\r\n      <Row>\r\n        <Col span={24}>\r\n          <UserInfo />\r\n        </Col>\r\n        <Col span={24}>\r\n          <RoomList />\r\n        </Col>\r\n      </Row>\r\n    </SidebarStyled>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Avatar, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { formatRelative } from 'date-fns/esm';\r\n\r\nconst WrapperStyled = styled.div`\r\n  margin-bottom: 10px;\r\n\r\n  .author {\r\n    margin-left: 5px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .date {\r\n    margin-left: 10px;\r\n    font-size: 11px;\r\n    color: #a7a7a7;\r\n  }\r\n\r\n  .content {\r\n    margin-left: 30px;\r\n  }\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n  let formattedDate = '';\r\n\r\n  if (seconds) {\r\n    formattedDate = formatRelative(new Date(seconds * 1000), new Date());\r\n\r\n    formattedDate =\r\n      formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n  }\r\n\r\n  return formattedDate;\r\n}\r\n\r\nexport default function Message({ text, displayName, createdAt, photoURL }) {\r\n  return (\r\n    <WrapperStyled>\r\n      <div>\r\n        <Avatar size='small' src={photoURL}>\r\n          {photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}\r\n        </Avatar>\r\n        <Typography.Text className='author'>{displayName}</Typography.Text>\r\n        <Typography.Text className='date'>\r\n          {formatDate(createdAt?.seconds)}\r\n        </Typography.Text>\r\n      </div>\r\n      <div>\r\n        <Typography.Text className='content'>{text}</Typography.Text>\r\n      </div>\r\n    </WrapperStyled>\r\n  );\r\n}\r\n","import { UserAddOutlined } from '@ant-design/icons';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Tooltip, Avatar, Form, Input, Alert } from 'antd';\r\nimport Message from './Message';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { addDocument } from '../../firebase/services';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport useFirestore from '../../hooks/useFirestore';\r\n\r\nconst HeaderStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 56px;\r\n  padding: 0 16px;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgb(230, 230, 230);\r\n\r\n  .header {\r\n    &__info {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n\r\n    &__title {\r\n      margin: 0;\r\n      font-weight: bold;\r\n    }\r\n\r\n    &__description {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonGroupStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst WrapperStyled = styled.div`\r\n  height: 100vh;\r\n`;\r\n\r\nconst ContentStyled = styled.div`\r\n  height: calc(100% - 56px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 11px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst FormStyled = styled(Form)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2px 2px 2px 0;\r\n  border: 1px solid rgb(230, 230, 230);\r\n  border-radius: 2px;\r\n\r\n  .ant-form-item {\r\n    flex: 1;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst MessageListStyled = styled.div`\r\n  max-height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport default function ChatWindow() {\r\n  const { selectedRoom, members, setIsInviteMemberVisible } =\r\n    useContext(AppContext);\r\n  const {\r\n    user: { uid, photoURL, displayName },\r\n  } = useContext(AuthContext);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [form] = Form.useForm();\r\n  const inputRef = useRef(null);\r\n  const messageListRef = useRef(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    addDocument('messages', {\r\n      text: inputValue,\r\n      uid,\r\n      photoURL,\r\n      roomId: selectedRoom.id,\r\n      displayName,\r\n    });\r\n\r\n    form.resetFields(['message']);\r\n\r\n    // focus to input again after submit\r\n    if (inputRef?.current) {\r\n      setTimeout(() => {\r\n        inputRef.current.focus();\r\n      });\r\n    }\r\n  };\r\n\r\n  const condition = React.useMemo(\r\n    () => ({\r\n      fieldName: 'roomId',\r\n      operator: '==',\r\n      compareValue: selectedRoom.id,\r\n    }),\r\n    [selectedRoom.id]\r\n  );\r\n\r\n  const messages = useFirestore('messages', condition);\r\n\r\n  useEffect(() => {\r\n    // scroll to bottom after message changed\r\n    if (messageListRef?.current) {\r\n      messageListRef.current.scrollTop =\r\n        messageListRef.current.scrollHeight + 50;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      {selectedRoom.id ? (\r\n        <>\r\n          <HeaderStyled>\r\n            <div className='header__info'>\r\n              <p className='header__title'>{selectedRoom.name}</p>\r\n              <span className='header__description'>\r\n                {selectedRoom.description}\r\n              </span>\r\n            </div>\r\n            <ButtonGroupStyled>\r\n              <Button\r\n                icon={<UserAddOutlined />}\r\n                type='text'\r\n                onClick={() => setIsInviteMemberVisible(true)}\r\n              >\r\n                Mời\r\n              </Button>\r\n              <Avatar.Group size='small' maxCount={2}>\r\n                {members.map((member) => (\r\n                  <Tooltip title={member.displayName} key={member.id}>\r\n                    <Avatar src={member.photoURL}>\r\n                      {member.photoURL\r\n                        ? ''\r\n                        : member.displayName?.charAt(0)?.toUpperCase()}\r\n                    </Avatar>\r\n                  </Tooltip>\r\n                ))}\r\n              </Avatar.Group>\r\n            </ButtonGroupStyled>\r\n          </HeaderStyled>\r\n          <ContentStyled>\r\n            <MessageListStyled ref={messageListRef}>\r\n              {messages.map((mes) => (\r\n                <Message\r\n                  key={mes.id}\r\n                  text={mes.text}\r\n                  photoURL={mes.photoURL}\r\n                  displayName={mes.displayName}\r\n                  createdAt={mes.createdAt}\r\n                />\r\n              ))}\r\n            </MessageListStyled>\r\n            <FormStyled form={form}>\r\n              <Form.Item name='message'>\r\n                <Input\r\n                  ref={inputRef}\r\n                  onChange={handleInputChange}\r\n                  onPressEnter={handleOnSubmit}\r\n                  placeholder='Nhập tin nhắn...'\r\n                  bordered={false}\r\n                  autoComplete='off'\r\n                />\r\n              </Form.Item>\r\n              <Button type='primary' onClick={handleOnSubmit}>\r\n                Gửi\r\n              </Button>\r\n            </FormStyled>\r\n          </ContentStyled>\r\n        </>\r\n      ) : (\r\n        <Alert\r\n          message='Hãy chọn phòng'\r\n          type='info'\r\n          showIcon\r\n          style={{ margin: 5 }}\r\n          closable\r\n        />\r\n      )}\r\n    </WrapperStyled>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport Sidebar from './Sidebar';\r\nimport ChatWindow from './ChatWindow';\r\n\r\nexport default function ChatRoom() {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={6}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col span={18}>\r\n          <ChatWindow />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Form, Modal, Input } from 'antd';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { addDocument } from '../../firebase/services';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\n\r\nexport default function AddRoomModal() {\r\n  const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext);\r\n  const {\r\n    user: { uid },\r\n  } = useContext(AuthContext);\r\n  const [form] = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    // handle logic\r\n    // add new room to firestore\r\n    addDocument('rooms', { ...form.getFieldsValue(), members: [uid] });\r\n\r\n    // reset form value\r\n    form.resetFields();\r\n\r\n    setIsAddRoomVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // reset form value\r\n    form.resetFields();\r\n\r\n    setIsAddRoomVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title='Tạo phòng'\r\n        visible={isAddRoomVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form form={form} layout='vertical'>\r\n          <Form.Item label='Tên phòng' name='name'>\r\n            <Input placeholder='Nhập tên phòng' />\r\n          </Form.Item>\r\n          <Form.Item label='Mô tả' name='description'>\r\n            <Input.TextArea placeholder='Nhập mô tả' />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Form, Modal, Select, Spin, Avatar } from 'antd';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { debounce } from 'lodash';\r\nimport { db } from '../../firebase/config';\r\n\r\nfunction DebounceSelect({\r\n  fetchOptions,\r\n  debounceTimeout = 300,\r\n  curMembers,\r\n  ...props\r\n}) {\r\n  // Search: abcddassdfasdf\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const debounceFetcher = React.useMemo(() => {\r\n    const loadOptions = (value) => {\r\n      setOptions([]);\r\n      setFetching(true);\r\n\r\n      fetchOptions(value, curMembers).then((newOptions) => {\r\n        setOptions(newOptions);\r\n        setFetching(false);\r\n      });\r\n    };\r\n\r\n    return debounce(loadOptions, debounceTimeout);\r\n  }, [debounceTimeout, fetchOptions, curMembers]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      // clear when unmount\r\n      setOptions([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Select\r\n      labelInValue\r\n      filterOption={false}\r\n      onSearch={debounceFetcher}\r\n      notFoundContent={fetching ? <Spin size='small' /> : null}\r\n      {...props}\r\n    >\r\n      {options.map((opt) => (\r\n        <Select.Option key={opt.value} value={opt.value} title={opt.label}>\r\n          <Avatar size='small' src={opt.photoURL}>\r\n            {opt.photoURL ? '' : opt.label?.charAt(0)?.toUpperCase()}\r\n          </Avatar>\r\n          {` ${opt.label}`}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nasync function fetchUserList(search, curMembers) {\r\n  return db\r\n    .collection('users')\r\n    .where('keywords', 'array-contains', search?.toLowerCase())\r\n    .orderBy('displayName')\r\n    .limit(20)\r\n    .get()\r\n    .then((snapshot) => {\r\n      return snapshot.docs\r\n        .map((doc) => ({\r\n          label: doc.data().displayName,\r\n          value: doc.data().uid,\r\n          photoURL: doc.data().photoURL,\r\n        }))\r\n        .filter((opt) => !curMembers.includes(opt.value));\r\n    });\r\n}\r\n\r\nexport default function InviteMemberModal() {\r\n  const {\r\n    isInviteMemberVisible,\r\n    setIsInviteMemberVisible,\r\n    selectedRoomId,\r\n    selectedRoom,\r\n  } = useContext(AppContext);\r\n  const [value, setValue] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    // reset form value\r\n    form.resetFields();\r\n    setValue([]);\r\n\r\n    // update members in current room\r\n    const roomRef = db.collection('rooms').doc(selectedRoomId);\r\n\r\n    roomRef.update({\r\n      members: [...selectedRoom.members, ...value.map((val) => val.value)],\r\n    });\r\n\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // reset form value\r\n    form.resetFields();\r\n    setValue([]);\r\n\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title='Mời thêm thành viên'\r\n        visible={isInviteMemberVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        destroyOnClose={true}\r\n      >\r\n        <Form form={form} layout='vertical'>\r\n          <DebounceSelect\r\n            mode='multiple'\r\n            name='search-user'\r\n            label='Tên các thành viên'\r\n            value={value}\r\n            placeholder='Nhập tên thành viên'\r\n            fetchOptions={fetchUserList}\r\n            onChange={(newValue) => setValue(newValue)}\r\n            style={{ width: '100%' }}\r\n            curMembers={selectedRoom.members}\r\n          />\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Login from \"./components/Login\";\r\n\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport ChatRoom from \"./components/ChatRoom\";\r\nimport AuthProvider from \"./Context/AuthProvider\";\r\nimport AppProvider from \"./Context/AppProvider\";\r\nimport AddRoomModal from \"./components/Modals/AddRoomModal\";\r\nimport InviteMemberModal from \"./components/Modals/InviteMemberModal\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <AuthProvider>\r\n        <AppProvider>\r\n          <Switch>\r\n            <Route component={Login} path=\"/login\" />\r\n            <Route component={ChatRoom} path=\"/\" />\r\n          </Switch>\r\n          <AddRoomModal />\r\n          <InviteMemberModal />\r\n        </AppProvider>\r\n      </AuthProvider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}